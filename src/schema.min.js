const Schema=a=>{Object.prototype.map=function(o=function(){}){let p=Object.keys(this);Object.values(this).map((q,r)=>o(p[r],q))};const b=new Map,c=(o,p)=>{if(b.has(a[o])||Array.isArray(a[o])){if(Array.isArray(a[o])){var q=a[o].map(r=>b.get(r)(p));return!q.includes(!1)}return b.get(a[o])(p)}return!1};return b.set("mail",o=>{let p=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return p.test(o)}),b.set("int",o=>"number"==typeof o&&Number.isInteger(o)),b.set("string",o=>"string"==typeof o&&""!==o),b.set("date",o=>o instanceof Date),b.set("json",o=>{try{JSON.parse(o)}catch(p){return!1}return!0}),b.set("array",o=>"object"==typeof o&&Array.isArray(o)),b.set("object",o=>"object"==typeof o&&!Array.isArray(o)&&null!==o),b.set("null",o=>null!==o),b.set("empty",o=>""!==o),function(o){return o.map((p,q)=>!!c(p,q)||(()=>{throw`Error in: ${p} value defined in Schema ${a[p]}`})()),!0}};